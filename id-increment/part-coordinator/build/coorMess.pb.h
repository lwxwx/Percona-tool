// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: coorMess.proto

#ifndef PROTOBUF_INCLUDED_coorMess_2eproto
#define PROTOBUF_INCLUDED_coorMess_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_coorMess_2eproto 

namespace protobuf_coorMess_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_coorMess_2eproto
namespace CoorMessage {
class CoorRequest;
class CoorRequestDefaultTypeInternal;
extern CoorRequestDefaultTypeInternal _CoorRequest_default_instance_;
class CoorResponse;
class CoorResponseDefaultTypeInternal;
extern CoorResponseDefaultTypeInternal _CoorResponse_default_instance_;
}  // namespace CoorMessage
namespace google {
namespace protobuf {
template<> ::CoorMessage::CoorRequest* Arena::CreateMaybeMessage<::CoorMessage::CoorRequest>(Arena*);
template<> ::CoorMessage::CoorResponse* Arena::CreateMaybeMessage<::CoorMessage::CoorResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace CoorMessage {

// ===================================================================

class CoorRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CoorMessage.CoorRequest) */ {
 public:
  CoorRequest();
  virtual ~CoorRequest();

  CoorRequest(const CoorRequest& from);

  inline CoorRequest& operator=(const CoorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CoorRequest(CoorRequest&& from) noexcept
    : CoorRequest() {
    *this = ::std::move(from);
  }

  inline CoorRequest& operator=(CoorRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CoorRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CoorRequest* internal_default_instance() {
    return reinterpret_cast<const CoorRequest*>(
               &_CoorRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CoorRequest* other);
  friend void swap(CoorRequest& a, CoorRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CoorRequest* New() const final {
    return CreateMaybeMessage<CoorRequest>(NULL);
  }

  CoorRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CoorRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CoorRequest& from);
  void MergeFrom(const CoorRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CoorRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 m_id = 1;
  bool has_m_id() const;
  void clear_m_id();
  static const int kMIdFieldNumber = 1;
  ::google::protobuf::int64 m_id() const;
  void set_m_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CoorMessage.CoorRequest)
 private:
  void set_has_m_id();
  void clear_has_m_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 m_id_;
  friend struct ::protobuf_coorMess_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CoorResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CoorMessage.CoorResponse) */ {
 public:
  CoorResponse();
  virtual ~CoorResponse();

  CoorResponse(const CoorResponse& from);

  inline CoorResponse& operator=(const CoorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CoorResponse(CoorResponse&& from) noexcept
    : CoorResponse() {
    *this = ::std::move(from);
  }

  inline CoorResponse& operator=(CoorResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CoorResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CoorResponse* internal_default_instance() {
    return reinterpret_cast<const CoorResponse*>(
               &_CoorResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CoorResponse* other);
  friend void swap(CoorResponse& a, CoorResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CoorResponse* New() const final {
    return CreateMaybeMessage<CoorResponse>(NULL);
  }

  CoorResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CoorResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CoorResponse& from);
  void MergeFrom(const CoorResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CoorResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 s_id = 2;
  bool has_s_id() const;
  void clear_s_id();
  static const int kSIdFieldNumber = 2;
  ::google::protobuf::int64 s_id() const;
  void set_s_id(::google::protobuf::int64 value);

  // required int64 m_id = 3;
  bool has_m_id() const;
  void clear_m_id();
  static const int kMIdFieldNumber = 3;
  ::google::protobuf::int64 m_id() const;
  void set_m_id(::google::protobuf::int64 value);

  // required int32 part_id = 1;
  bool has_part_id() const;
  void clear_part_id();
  static const int kPartIdFieldNumber = 1;
  ::google::protobuf::int32 part_id() const;
  void set_part_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CoorMessage.CoorResponse)
 private:
  void set_has_part_id();
  void clear_has_part_id();
  void set_has_s_id();
  void clear_has_s_id();
  void set_has_m_id();
  void clear_has_m_id();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 s_id_;
  ::google::protobuf::int64 m_id_;
  ::google::protobuf::int32 part_id_;
  friend struct ::protobuf_coorMess_2eproto::TableStruct;
};
// ===================================================================

class CoorService_Stub;

class CoorService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline CoorService() {};
 public:
  virtual ~CoorService();

  typedef CoorService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void CoorMess(::google::protobuf::RpcController* controller,
                       const ::CoorMessage::CoorRequest* request,
                       ::CoorMessage::CoorResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(CoorService);
};

class CoorService_Stub : public CoorService {
 public:
  CoorService_Stub(::google::protobuf::RpcChannel* channel);
  CoorService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~CoorService_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements CoorService ------------------------------------------

  void CoorMess(::google::protobuf::RpcController* controller,
                       const ::CoorMessage::CoorRequest* request,
                       ::CoorMessage::CoorResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(CoorService_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CoorRequest

// required int64 m_id = 1;
inline bool CoorRequest::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CoorRequest::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CoorRequest::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CoorRequest::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 CoorRequest::m_id() const {
  // @@protoc_insertion_point(field_get:CoorMessage.CoorRequest.m_id)
  return m_id_;
}
inline void CoorRequest::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
  // @@protoc_insertion_point(field_set:CoorMessage.CoorRequest.m_id)
}

// -------------------------------------------------------------------

// CoorResponse

// required int32 part_id = 1;
inline bool CoorResponse::has_part_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CoorResponse::set_has_part_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CoorResponse::clear_has_part_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CoorResponse::clear_part_id() {
  part_id_ = 0;
  clear_has_part_id();
}
inline ::google::protobuf::int32 CoorResponse::part_id() const {
  // @@protoc_insertion_point(field_get:CoorMessage.CoorResponse.part_id)
  return part_id_;
}
inline void CoorResponse::set_part_id(::google::protobuf::int32 value) {
  set_has_part_id();
  part_id_ = value;
  // @@protoc_insertion_point(field_set:CoorMessage.CoorResponse.part_id)
}

// required int64 s_id = 2;
inline bool CoorResponse::has_s_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CoorResponse::set_has_s_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CoorResponse::clear_has_s_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CoorResponse::clear_s_id() {
  s_id_ = GOOGLE_LONGLONG(0);
  clear_has_s_id();
}
inline ::google::protobuf::int64 CoorResponse::s_id() const {
  // @@protoc_insertion_point(field_get:CoorMessage.CoorResponse.s_id)
  return s_id_;
}
inline void CoorResponse::set_s_id(::google::protobuf::int64 value) {
  set_has_s_id();
  s_id_ = value;
  // @@protoc_insertion_point(field_set:CoorMessage.CoorResponse.s_id)
}

// required int64 m_id = 3;
inline bool CoorResponse::has_m_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CoorResponse::set_has_m_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CoorResponse::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CoorResponse::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 CoorResponse::m_id() const {
  // @@protoc_insertion_point(field_get:CoorMessage.CoorResponse.m_id)
  return m_id_;
}
inline void CoorResponse::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
  // @@protoc_insertion_point(field_set:CoorMessage.CoorResponse.m_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace CoorMessage

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_coorMess_2eproto
